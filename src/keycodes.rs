#![allow(unused)]

pub(crate) const KEY_LEFT_CTRL: u8 = 0xe0; // Keyboard Left Control
pub(crate) const KEY_LEFT_SHIFT: u8 = 0xe1; // Keyboard Left Shift
pub(crate) const KEY_LEFT_ALT: u8 = 0xe2; // Keyboard Left Alt
pub(crate) const KEY_LEFT_META: u8 = 0xe3; // Keyboard Left GUI
pub(crate) const KEY_RIGHT_CTRL: u8 = 0xe4; // Keyboard Right Control
pub(crate) const KEY_RIGHT_SHIFT: u8 = 0xe5; // Keyboard Right Shift
pub(crate) const KEY_RIGHT_ALT: u8 = 0xe6; // Keyboard Right Alt
pub(crate) const KEY_RIGHT_META: u8 = 0xe7; // Keyboard Right GUI

pub(crate) const KEY_A: u8 = 0x04;
pub(crate) const KEY_B: u8 = 0x05;
pub(crate) const KEY_C: u8 = 0x06;
pub(crate) const KEY_D: u8 = 0x07;
pub(crate) const KEY_E: u8 = 0x08;
pub(crate) const KEY_F: u8 = 0x09;
pub(crate) const KEY_G: u8 = 0x0a;
pub(crate) const KEY_H: u8 = 0x0b;
pub(crate) const KEY_I: u8 = 0x0c;
pub(crate) const KEY_J: u8 = 0x0d;
pub(crate) const KEY_K: u8 = 0x0e;
pub(crate) const KEY_L: u8 = 0x0f;
pub(crate) const KEY_M: u8 = 0x10;
pub(crate) const KEY_N: u8 = 0x11;
pub(crate) const KEY_O: u8 = 0x12;
pub(crate) const KEY_P: u8 = 0x13;
pub(crate) const KEY_Q: u8 = 0x14;
pub(crate) const KEY_R: u8 = 0x15;
pub(crate) const KEY_S: u8 = 0x16;
pub(crate) const KEY_T: u8 = 0x17;
pub(crate) const KEY_U: u8 = 0x18;
pub(crate) const KEY_V: u8 = 0x19;
pub(crate) const KEY_W: u8 = 0x1a;
pub(crate) const KEY_X: u8 = 0x1b;
pub(crate) const KEY_Y: u8 = 0x1c;
pub(crate) const KEY_Z: u8 = 0x1d;
pub(crate) const KEY_1: u8 = 0x1e;
pub(crate) const KEY_2: u8 = 0x1f;
pub(crate) const KEY_3: u8 = 0x20;
pub(crate) const KEY_4: u8 = 0x21;
pub(crate) const KEY_5: u8 = 0x22;
pub(crate) const KEY_6: u8 = 0x23;
pub(crate) const KEY_7: u8 = 0x24;
pub(crate) const KEY_8: u8 = 0x25;
pub(crate) const KEY_9: u8 = 0x26;
pub(crate) const KEY_0: u8 = 0x27;

pub(crate) const KEY_ENTER: u8 = 0x28; // Keyboard Return (ENTER)
pub(crate) const KEY_ESC: u8 = 0x29; // Keyboard ESCAPE
pub(crate) const KEY_BACKSPACE: u8 = 0x2a; // Keyboard DELETE (Backspace)
pub(crate) const KEY_TAB: u8 = 0x2b; // Keyboard Tab
pub(crate) const KEY_SPACE: u8 = 0x2c; // Keyboard Spacebar
pub(crate) const KEY_MINUS: u8 = 0x2d; // Keyboard - and _
pub(crate) const KEY_EQUAL: u8 = 0x2e; // Keyboard = and +
pub(crate) const KEY_LEFT_BRACE: u8 = 0x2f; // Keyboard [ and {
pub(crate) const KEY_RIGHT_BRACE: u8 = 0x30; // Keyboard ] and }
pub(crate) const KEY_BACKSLASH: u8 = 0x31; // Keyboard \ and |
pub(crate) const KEY_HASH_TILDE: u8 = 0x32; // Keyboard Non-US # and ~
pub(crate) const KEY_SEMICOLON: u8 = 0x33; // Keyboard ; and :
pub(crate) const KEY_APOSTROPHE: u8 = 0x34; // Keyboard ' and "
pub(crate) const KEY_GRAVE: u8 = 0x35; // Keyboard ` and ~
pub(crate) const KEY_COMMA: u8 = 0x36; // Keyboard , and <
pub(crate) const KEY_DOT: u8 = 0x37; // Keyboard . and >
pub(crate) const KEY_SLASH: u8 = 0x38; // Keyboard / and ?
pub(crate) const KEY_CAPSLOCK: u8 = 0x39; // Keyboard Caps Lock

pub(crate) const KEY_SYSRQ: u8 = 0x46; // Keyboard Print Screen
pub(crate) const KEY_SCROLL_LOCK: u8 = 0x47; // Keyboard Scroll Lock
pub(crate) const KEY_PAUSE: u8 = 0x48; // Keyboard Pause
pub(crate) const KEY_INSERT: u8 = 0x49; // Keyboard Insert
pub(crate) const KEY_HOME: u8 = 0x4a; // Keyboard Home
pub(crate) const KEY_PAGEUP: u8 = 0x4b; // Keyboard Page Up
pub(crate) const KEY_DELETE: u8 = 0x4c; // Keyboard Delete Forward
pub(crate) const KEY_END: u8 = 0x4d; // Keyboard End
pub(crate) const KEY_PAGEDOWN: u8 = 0x4e; // Keyboard Page Down
pub(crate) const KEY_RIGHT: u8 = 0x4f; // Keyboard Right Arrow
pub(crate) const KEY_LEFT: u8 = 0x50; // Keyboard Left Arrow
pub(crate) const KEY_DOWN: u8 = 0x51; // Keyboard Down Arrow
pub(crate) const KEY_UP: u8 = 0x52; // Keyboard Up Arrow

pub(crate) const KEY_NUMLOCK: u8 = 0x53; // Keyboard Num Lock and Clear

pub(crate) const KEY_F1: u8 = 0x3a; // Keyboard F1
pub(crate) const KEY_F2: u8 = 0x3b; // Keyboard F2
pub(crate) const KEY_F3: u8 = 0x3c; // Keyboard F3
pub(crate) const KEY_F4: u8 = 0x3d; // Keyboard F4
pub(crate) const KEY_F5: u8 = 0x3e; // Keyboard F5
pub(crate) const KEY_F6: u8 = 0x3f; // Keyboard F6
pub(crate) const KEY_F7: u8 = 0x40; // Keyboard F7
pub(crate) const KEY_F8: u8 = 0x41; // Keyboard F8
pub(crate) const KEY_F9: u8 = 0x42; // Keyboard F9
pub(crate) const KEY_F10: u8 = 0x43; // Keyboard F10
pub(crate) const KEY_F11: u8 = 0x44; // Keyboard F11
pub(crate) const KEY_F12: u8 = 0x45; // Keyboard F12
pub(crate) const KEY_F13: u8 = 0x68; // Keyboard F13
pub(crate) const KEY_F14: u8 = 0x69; // Keyboard F14
pub(crate) const KEY_F15: u8 = 0x6a; // Keyboard F15
pub(crate) const KEY_F16: u8 = 0x6b; // Keyboard F16
pub(crate) const KEY_F17: u8 = 0x6c; // Keyboard F17
pub(crate) const KEY_F18: u8 = 0x6d; // Keyboard F18
pub(crate) const KEY_F19: u8 = 0x6e; // Keyboard F19
pub(crate) const KEY_F20: u8 = 0x6f; // Keyboard F20
pub(crate) const KEY_F21: u8 = 0x70; // Keyboard F21
pub(crate) const KEY_F22: u8 = 0x71; // Keyboard F22
pub(crate) const KEY_F23: u8 = 0x72; // Keyboard F23
pub(crate) const KEY_F24: u8 = 0x73; // Keyboard F24

pub(crate) const MEDIA_PLAY_PAUSE: u8 = 0xe8;
pub(crate) const MEDIA_STOP_CD: u8 = 0xe9;
pub(crate) const MEDIA_PREVIOUS_SONG: u8 = 0xea;
pub(crate) const MEDIA_NEXT_SONG: u8 = 0xeb;
pub(crate) const MEDIA_EJECT_CD: u8 = 0xec;
pub(crate) const MEDIA_VOLUME_UP: u8 = 0xed;
pub(crate) const MEDIA_VOLUME_DOWN: u8 = 0xee;
pub(crate) const MEDIA_MUTE: u8 = 0xef;
pub(crate) const MEDIA_WWW: u8 = 0xf0;
pub(crate) const MEDIA_BACK: u8 = 0xf1;
pub(crate) const MEDIA_FORWARD: u8 = 0xf2;
pub(crate) const MEDIA_STOP: u8 = 0xf3;
pub(crate) const MEDIA_FIND: u8 = 0xf4;
pub(crate) const MEDIA_SCROLL_UP: u8 = 0xf5;
pub(crate) const MEDIA_SCROLL_DOWN: u8 = 0xf6;
pub(crate) const MEDIA_EDIT: u8 = 0xf7;
pub(crate) const MEDIA_SLEEP: u8 = 0xf8;
pub(crate) const MEDIA_COFFEE: u8 = 0xf9;
pub(crate) const MEDIA_REFRESH: u8 = 0xfa;
pub(crate) const MEDIA_CALC: u8 = 0xfb;

pub(crate) const PAD_SLASH: u8 = 0x54; // Keypad /
pub(crate) const PAD_ASTERISK: u8 = 0x55; // Keypad *
pub(crate) const PAD_MINUS: u8 = 0x56; // Keypad -
pub(crate) const PAD_PLUS: u8 = 0x57; // Keypad +
pub(crate) const PAD_ENTER: u8 = 0x58; // Keypad ENTER
pub(crate) const PAD_1: u8 = 0x59; // Keypad 1 and End
pub(crate) const PAD_2: u8 = 0x5a; // Keypad 2 and Down Arrow
pub(crate) const PAD_3: u8 = 0x5b; // Keypad 3 and PageDn
pub(crate) const PAD_4: u8 = 0x5c; // Keypad 4 and Left Arrow
pub(crate) const PAD_5: u8 = 0x5d; // Keypad 5
pub(crate) const PAD_6: u8 = 0x5e; // Keypad 6 and Right Arrow
pub(crate) const PAD_7: u8 = 0x5f; // Keypad 7 and Home
pub(crate) const PAD_8: u8 = 0x60; // Keypad 8 and Up Arrow
pub(crate) const PAD_9: u8 = 0x61; // Keypad 9 and Page Up
pub(crate) const PAD_0: u8 = 0x62; // Keypad 0 and Insert
pub(crate) const PAD_DOT: u8 = 0x63; // Keypad . and Delete
                                     //
pub(crate) const KEY_102ND: u8 = 0x64; // Keyboard Non-US \ and |
pub(crate) const KEY_COMPOSE: u8 = 0x65; // Keyboard Application
pub(crate) const KEY_POWER: u8 = 0x66; // Keyboard Power
pub(crate) const PAD_EQUAL: u8 = 0x67; // Keypad =                                     

pub(crate) const PAD_COMMA: u8 = 0x85; // Keypad Comma
pub(crate) const PAD_LEFT_PAREN: u8 = 0xb6; // Keypad (
pub(crate) const PAD_RIGHT_PAREN: u8 = 0xb7; // Keypad )
